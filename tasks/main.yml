---
# ddclient/tasks/main.yml

- name: Clone DDClient's Git Repo
  git:
    repo: "{{ ddclient_git_repo }}"
    dest: "{{ git_loc }}/ddclient"
    update: yes
    accept_hostkey: yes
  register: ddclient_git_repo

- name: Install apt Dependencies
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: "{{ cache_valid_time_var }}"
  with_items:
    - libio-socket-ssl-perl
    - perl
    - cpanminus
  become: true

- name: Copy over DDClient Executable
  synchronize:
    src: "{{ git_loc }}/ddclient/ddclient"
    dest: "/usr/sbin/ddclient"
    checksum: yes
    times: no
  delegate_to: "{{ inventory_hostname }}"
  when: ddclient_git_repo|changed
  become: true

- name: Create /etc and /var/cache Directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  with_items:
    - "/etc/ddclient"
    - "/var/cache/ddclient"
  become: true

- name: Build Out ddclient.conf File
  template:
    src: ddclient.conf.j2
    dest: /etc/ddclient/ddclient.conf
    owner: root
    group: root
  become: true

- name: Copy Over init.d File
  synchronize:
    src: "{{ git_loc }}/ddclient/sample-etc_rc.d_init.d_ddclient.ubuntu"
    dest: "/etc/init.d/ddclient"
    checksum: yes
    times: no
  when:
    - ansible_os_family == "Debian"
    - ddclient_git_repo|changed
  delegate_to: "{{ inventory_hostname }}"
  become: true

- name: Make All The Files Executable
  file:
    path: "{{ item.path }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
    state: file
  with_items:
    - { path: "/etc/init.d/ddclient", mode: "0750" }
    - { path: "/etc/ddclient/ddclient.conf", mode: "0700" }
    - { path: "/usr/sbin/ddclient", mode: "0750" }
  become: true

- name: Install CPAN Dependencies
  cpanm:
    name: "{{ item }}"
    system_lib: yes
  with_items:
    - "Data::Validate::IP"
    - "IO::Socket::SSL"
    - "IO::Socket::INET6"
    - "JSON::PP"
  become: true

- name: Add ddclient to autostart
  service: name=ddclient enabled=yes

- name: Start ddclient
  service: name=ddclient state=started
  become: true
